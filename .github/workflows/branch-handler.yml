name: Branch Handler

on:
  workflow_dispatch:
    inputs:
      branch_pattern:
        description: Pattern to match branches (e.g., sprint-, hotfix, hotfix/1.15)
        required: true
      action:
        description: Action to perform (review, keep, delete)
        required: true
        default: review
      confirm_delete:
        description: Type YES to confirm deletion (only needed if deleting)
        required: false
        default: ""

jobs:
  handle-branches:
    runs-on: ubuntu-latest
    outputs:
      hotfix_exists: ${{ steps.filter_branches.outputs.hotfix_exists }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Fetch all branches
        id: fetch_branches
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ALL_BRANCHES=$(gh api -H "Accept: application/vnd.github+json" \
            /repos/${{ github.repository }}/branches --paginate --jq '.[].name')
          echo "$ALL_BRANCHES" > all_branches.txt
          echo "Fetched branches count: $(echo "$ALL_BRANCHES" | wc -l)"

      - name: Filter branches and generate artifacts
        id: filter_branches
        run: |
          PATTERN="${{ github.event.inputs.branch_pattern }}"
          ALL_BRANCHES=$(cat all_branches.txt)

          PATTERN_LOWER=$(echo "$PATTERN" | tr '[:upper:]' '[:lower:]')

          echo "hotfix_exists=false" >> $GITHUB_OUTPUT

          echo "Input pattern: '$PATTERN'"
          echo "Total branches fetched: $(echo "$ALL_BRANCHES" | wc -l)"

          if [[ "$PATTERN_LOWER" == hotfix* ]]; then
            echo "Pattern starts with 'hotfix' - matching branches starting exactly with pattern (case-insensitive)"

            # Escape special regex chars in pattern for safe regex use
            ESCAPED_PATTERN=$(echo "$PATTERN" | sed -E 's/[][\\.^$*+?{}|()]/\\&/g')

            # Match branches starting with the exact pattern, case-insensitive
            MATCHING_BRANCHES=$(echo "$ALL_BRANCHES" | grep -i -E "^${ESCAPED_PATTERN}" || true)
            echo "Matched branches count: $(echo "$MATCHING_BRANCHES" | wc -l)"
            echo "$MATCHING_BRANCHES" > matched_branches.txt

            # Also extract all branches starting with 'hotfix/' case-insensitive
            HOTFIX_BRANCHES=$(echo "$ALL_BRANCHES" | grep -i -E '^hotfix/' || true)

            if [[ -n "$HOTFIX_BRANCHES" ]]; then
              echo "$HOTFIX_BRANCHES" > hotfix_branches.txt
              # Extract tag part after hotfix/
              echo "$HOTFIX_BRANCHES" | sed -E 's/^[Hh][Oo][Tt][Ff][Ii][Xx]\///' > hotfix_tags.txt
              echo "hotfix_exists=true" >> $GITHUB_OUTPUT
            fi

          else
            echo "Pattern does NOT start with 'hotfix' - doing case-insensitive substring match"
            MATCHING_BRANCHES=$(echo "$ALL_BRANCHES" | grep -i -F "$PATTERN" || true)
            echo "Matched branches count: $(echo "$MATCHING_BRANCHES" | wc -l)"
            echo "$MATCHING_BRANCHES" > matched_branches.txt
          fi

          echo "Matched branches:"
          cat matched_branches.txt || echo "(no matches)"

          if [[ -f hotfix_tags.txt ]]; then
            echo "Hotfix tags:"
            cat hotfix_tags.txt
          fi

      - name: Upload artifact - matched branches
        uses: actions/upload-artifact@v4
        with:
          name: matched-branches
          path: matched_branches.txt

      - name: Upload artifact - hotfix tags
        if: ${{ steps.filter_branches.outputs.hotfix_exists == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: hotfix-tags
          path: hotfix_tags.txt

      - name: Stop if action is review
        if: ${{ github.event.inputs.action == 'review' }}
        run: |
          echo "‚úÖ Branch list uploaded for review. No action will be taken."
          echo "üõë To take action, re-run the workflow and choose 'keep' or 'delete'."
          exit 0

      - name: Confirm deletion
        if: ${{ github.event.inputs.action == 'delete' }}
        run: |
          if [[ "${{ github.event.inputs.confirm_delete }}" != "YES" ]]; then
            echo "‚ùå Deletion not confirmed. Set 'confirm_delete' to YES."
            exit 1
          fi
          echo "‚úÖ Deletion confirmed."

      - name: Delete branches
        if: ${{ github.event.inputs.action == 'delete' && github.event.inputs.confirm_delete == 'YES' }}
        run: |
          while read -r branch; do
            if [[ -n "$branch" ]]; then
              echo "Deleting $branch"
              git push origin --delete "$branch"
            fi
          done < matched_branches.txt

      - name: Keep branches (no action)
        if: ${{ github.event.inputs.action == 'keep' }}
        run: echo "‚úÖ Branches kept intact."
